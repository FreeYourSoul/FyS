<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_character_status__generated_8h" kind="file" language="C++">
    <compoundname>CharacterStatus_generated.h</compoundname>
    <includes local="yes">flatbuffers/flatbuffers.h</includes>
    <includedby refid="_fighting_pit_state__generated_8h" local="yes">/home/FyS/Project/FyS/services/common/flatbuffer/includes/FightingPitState_generated.h</includedby>
    <includedby refid="_reply_frame__generated_8h" local="yes">/home/FyS/Project/FyS/services/common/flatbuffer/includes/ReplyFrame_generated.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/FyS/Project/FyS/services/common/flatbuffer/includes/CharacterStatus_generated.h</label>
        <link refid="_character_status__generated_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>flatbuffers/flatbuffers.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/FyS/Project/FyS/services/common/flatbuffer/includes/FightingPitState_generated.h</label>
        <link refid="_fighting_pit_state__generated_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/FyS/Project/FyS/services/common/flatbuffer/includes/ReplyFrame_generated.h</label>
        <link refid="_reply_frame__generated_8h_source"/>
      </node>
      <node id="1">
        <label>/home/FyS/Project/FyS/services/common/flatbuffer/includes/CharacterStatus_generated.h</label>
        <link refid="_character_status__generated_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structfys_1_1fb_1_1_f_l_a_t_b_u_f_f_e_r_s___f_i_n_a_l___c_l_a_s_s" prot="public">fys::fb::FLATBUFFERS_FINAL_CLASS</innerclass>
    <innerclass refid="structfys_1_1fb_1_1_cosmetics_builder" prot="public">fys::fb::CosmeticsBuilder</innerclass>
    <innernamespace refid="namespacefys">fys</innernamespace>
    <innernamespace refid="namespacefys_1_1fb">fys::fb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>automatically<sp/>generated<sp/>by<sp/>the<sp/>FlatBuffers<sp/>compiler,<sp/>do<sp/>not<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FLATBUFFERS_GENERATED_CHARACTERSTATUS_FYS_FB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLATBUFFERS_GENERATED_CHARACTERSTATUS_FYS_FB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;flatbuffers/flatbuffers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fys<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fb<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CharacterStatus;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Cosmetic;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Cosmetics;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SideOrient<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>SideOrient_A_N<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>SideOrient_A_NE<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>SideOrient_A_SE<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>SideOrient_A_S<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>SideOrient_A_SW<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>SideOrient_A_NW<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>SideOrient_B_N<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>SideOrient_B_NE<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>SideOrient_B_SE<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>SideOrient_B_S<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>SideOrient_B_SW<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>SideOrient_B_NW<sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>SideOrient_C_N<sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>SideOrient_C_NE<sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>SideOrient_C_SE<sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>SideOrient_C_S<sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>SideOrient_C_SW<sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>SideOrient_C_NW<sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>SideOrient_MIN<sp/>=<sp/>SideOrient_A_N,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>SideOrient_MAX<sp/>=<sp/>SideOrient_C_NW</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SideOrient<sp/>(&amp;EnumValuesSideOrient())[18]<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SideOrient<sp/>values[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_A_N,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_A_NE,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_A_SE,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_A_S,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_A_SW,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_A_NW,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_B_N,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_B_NE,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_B_SE,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_B_S,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_B_SW,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_B_NW,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_C_N,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_C_NE,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_C_SE,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_C_S,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_C_SW,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>SideOrient_C_NW</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*EnumNamesSideOrient()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>names[19]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A_N&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A_NE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A_SE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A_S&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A_SW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A_NW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;B_N&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;B_NE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;B_SE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;B_S&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;B_SW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;B_NW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C_N&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C_NE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C_SE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C_S&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C_SW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C_NW&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>names;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*EnumNameSideOrient(SideOrient<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>&lt;<sp/>SideOrient_A_N<sp/>||<sp/>e<sp/>&gt;<sp/>SideOrient_C_NW)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EnumNamesSideOrient()[index];</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>CosmeticType<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>CosmeticType_WEAPON<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>CosmeticType_CHARACTER<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>CosmeticType_EQUIPMENT<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>CosmeticType_MIN<sp/>=<sp/>CosmeticType_WEAPON,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>CosmeticType_MAX<sp/>=<sp/>CosmeticType_EQUIPMENT</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CosmeticType<sp/>(&amp;EnumValuesCosmeticType())[3]<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CosmeticType<sp/>values[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>CosmeticType_WEAPON,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>CosmeticType_CHARACTER,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>CosmeticType_EQUIPMENT</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*EnumNamesCosmeticType()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>names[4]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WEAPON&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CHARACTER&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EQUIPMENT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>names;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*EnumNameCosmeticType(CosmeticType<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>&lt;<sp/>CosmeticType_WEAPON<sp/>||<sp/>e<sp/>&gt;<sp/>CosmeticType_EQUIPMENT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EnumNamesCosmeticType()[index];</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4)<sp/>CharacterStatus<sp/>FLATBUFFERS_FINAL_CLASS<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>uint32_t<sp/>character_id_;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>uint8_t<sp/>isContender_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>int8_t<sp/>padding0__;<sp/><sp/>int16_t<sp/>padding1__;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>uint32_t<sp/>current_life_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>uint32_t<sp/>total_life_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>uint32_t<sp/>current_mp_;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>uint32_t<sp/>total_mp_;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>int8_t<sp/>side_;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>int8_t<sp/>padding2__;<sp/><sp/>int16_t<sp/>padding3__;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>CharacterStatus()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(CharacterStatus));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>CharacterStatus(uint32_t<sp/>_character_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isContender,<sp/>uint32_t<sp/>_current_life,<sp/>uint32_t<sp/>_total_life,<sp/>uint32_t<sp/>_current_mp,<sp/>uint32_t<sp/>_total_mp,<sp/>fys::fb::SideOrient<sp/>_side)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>character_id_(flatbuffers::EndianScalar(_character_id)),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isContender_(flatbuffers::EndianScalar(static_cast&lt;uint8_t&gt;(_isContender))),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding0__(0),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding1__(0),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_life_(flatbuffers::EndianScalar(_current_life)),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_life_(flatbuffers::EndianScalar(_total_life)),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_mp_(flatbuffers::EndianScalar(_current_mp)),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_mp_(flatbuffers::EndianScalar(_total_mp)),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side_(flatbuffers::EndianScalar(static_cast&lt;int8_t&gt;(_side))),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding2__(0),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding3__(0)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)padding0__;<sp/><sp/><sp/><sp/>(void)padding1__;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)padding2__;<sp/><sp/><sp/><sp/>(void)padding3__;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>uint32_t<sp/>character_id()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(character_id_);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_character_id(uint32_t<sp/>_character_id)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;character_id_,<sp/>_character_id);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isContender()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(isContender_)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_isContender(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isContender)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;isContender_,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_isContender));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>uint32_t<sp/>current_life()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(current_life_);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_current_life(uint32_t<sp/>_current_life)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;current_life_,<sp/>_current_life);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>uint32_t<sp/>total_life()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(total_life_);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_total_life(uint32_t<sp/>_total_life)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;total_life_,<sp/>_total_life);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>uint32_t<sp/>current_mp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(current_mp_);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_current_mp(uint32_t<sp/>_current_mp)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;current_mp_,<sp/>_current_mp);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>uint32_t<sp/>total_mp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(total_mp_);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_total_mp(uint32_t<sp/>_total_mp)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;total_mp_,<sp/>_total_mp);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>fys::fb::SideOrient<sp/>side()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">fys::fb::SideOrient</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(flatbuffers::EndianScalar(side_));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_side(fys::fb::SideOrient<sp/>_side)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;side_,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_side));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal">FLATBUFFERS_STRUCT_END(CharacterStatus,<sp/>28);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4)<sp/>Cosmetic<sp/>FLATBUFFERS_FINAL_CLASS<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>uint32_t<sp/>character_id_;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>uint32_t<sp/>cosmeticId_;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>int8_t<sp/>cosmeticType_;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>int8_t<sp/>padding0__;<sp/><sp/>int16_t<sp/>padding1__;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>Cosmetic()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Cosmetic));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>Cosmetic(uint32_t<sp/>_character_id,<sp/>uint32_t<sp/>_cosmeticId,<sp/>fys::fb::CosmeticType<sp/>_cosmeticType)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>character_id_(flatbuffers::EndianScalar(_character_id)),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosmeticId_(flatbuffers::EndianScalar(_cosmeticId)),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosmeticType_(flatbuffers::EndianScalar(static_cast&lt;int8_t&gt;(_cosmeticType))),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding0__(0),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding1__(0)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)padding0__;<sp/><sp/><sp/><sp/>(void)padding1__;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>uint32_t<sp/>character_id()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(character_id_);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_character_id(uint32_t<sp/>_character_id)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;character_id_,<sp/>_character_id);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>uint32_t<sp/>cosmeticId()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flatbuffers::EndianScalar(cosmeticId_);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_cosmeticId(uint32_t<sp/>_cosmeticId)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;cosmeticId_,<sp/>_cosmeticId);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>fys::fb::CosmeticType<sp/>cosmeticType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">fys::fb::CosmeticType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(flatbuffers::EndianScalar(cosmeticType_));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mutate_cosmeticType(fys::fb::CosmeticType<sp/>_cosmeticType)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::WriteScalar(&amp;cosmeticType_,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_cosmeticType));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal">FLATBUFFERS_STRUCT_END(Cosmetic,<sp/>12);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Cosmetics<sp/>FLATBUFFERS_FINAL_CLASS<sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>flatbuffers::Table<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>FlatBuffersVTableOffset<sp/>FLATBUFFERS_VTABLE_UNDERLYING_TYPE<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_COSMETIC<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flatbuffers::Vector&lt;const<sp/>fys::fb::Cosmetic<sp/>*&gt;<sp/>*cosmetic()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetPointer&lt;const<sp/>flatbuffers::Vector&lt;const<sp/>fys::fb::Cosmetic<sp/>*&gt;<sp/>*&gt;(VT_COSMETIC);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>flatbuffers::Vector&lt;const<sp/>fys::fb::Cosmetic<sp/>*&gt;<sp/>*mutable_cosmetic()<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetPointer&lt;flatbuffers::Vector&lt;const<sp/>fys::fb::Cosmetic<sp/>*&gt;<sp/>*&gt;(VT_COSMETIC);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Verify(flatbuffers::Verifier<sp/>&amp;verifier)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VerifyTableStart(verifier)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VerifyOffset(verifier,<sp/>VT_COSMETIC)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verifier.VerifyVector(cosmetic())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verifier.EndTable();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="structfys_1_1fb_1_1_cosmetics_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfys_1_1fb_1_1_cosmetics_builder" kindref="compound">CosmeticsBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>flatbuffers::FlatBufferBuilder<sp/>&amp;fbb_;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>flatbuffers::uoffset_t<sp/>start_;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_cosmetic(flatbuffers::Offset&lt;flatbuffers::Vector&lt;const<sp/>fys::fb::Cosmetic<sp/>*&gt;&gt;<sp/>cosmetic)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>fbb_.AddOffset(Cosmetics::VT_COSMETIC,<sp/>cosmetic);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structfys_1_1fb_1_1_cosmetics_builder" kindref="compound">CosmeticsBuilder</ref>(flatbuffers::FlatBufferBuilder<sp/>&amp;_fbb)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>fbb_(_fbb)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>start_<sp/>=<sp/>fbb_.StartTable();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="structfys_1_1fb_1_1_cosmetics_builder" kindref="compound">CosmeticsBuilder</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structfys_1_1fb_1_1_cosmetics_builder" kindref="compound">CosmeticsBuilder</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>flatbuffers::Offset&lt;Cosmetics&gt;<sp/>Finish()<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>fbb_.EndTable(start_);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>o<sp/>=<sp/>flatbuffers::Offset&lt;Cosmetics&gt;(end);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal">};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>flatbuffers::Offset&lt;Cosmetics&gt;<sp/>CreateCosmetics(</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::FlatBufferBuilder<sp/>&amp;_fbb,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::Offset&lt;flatbuffers::Vector&lt;const<sp/>fys::fb::Cosmetic<sp/>*&gt;&gt;<sp/>cosmetic<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="structfys_1_1fb_1_1_cosmetics_builder" kindref="compound">CosmeticsBuilder</ref><sp/>builder_(_fbb);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>builder_.add_cosmetic(cosmetic);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>builder_.Finish();</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>flatbuffers::Offset&lt;Cosmetics&gt;<sp/>CreateCosmeticsDirect(</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>flatbuffers::FlatBufferBuilder<sp/>&amp;_fbb,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;fys::fb::Cosmetic&gt;<sp/>*cosmetic<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cosmetic__<sp/>=<sp/>cosmetic<sp/>?<sp/>_fbb.CreateVectorOfStructs&lt;fys::fb::Cosmetic&gt;(*cosmetic)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fys::fb::CreateCosmetics(</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_fbb,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cosmetic__);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FLATBUFFERS_GENERATED_CHARACTERSTATUS_FYS_FB_H_</highlight></codeline>
    </programlisting>
    <location file="/home/FyS/Project/FyS/services/common/flatbuffer/includes/CharacterStatus_generated.h"/>
  </compounddef>
</doxygen>
