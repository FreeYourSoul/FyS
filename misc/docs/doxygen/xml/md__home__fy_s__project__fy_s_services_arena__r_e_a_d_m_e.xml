<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="md__home__fy_s__project__fy_s_services_arena__r_e_a_d_m_e" kind="page">
    <compoundname>md__home_FyS_Project_FyS_services_arena_README</compoundname>
    <title>Arena Service</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This service is the one managing battle for FyS Online (MMORPG). <linebreak/>
 More information on the [documentation part].</para>
<para><heading level="1">TODO</heading>
</para>
<para><itemizedlist>
<listitem><para>Create the internal (interprocess) zmq communication channel (even without threading pool) to read from the FightingPit</para>
</listitem><listitem><para>Implement a first fighting version without multiple without multiple battles.<itemizedlist>
<listitem><para>Make one Arena Worker by default.</para>
</listitem><listitem><para>Implement chai scripting<itemizedlist>
<listitem><para>Minimum script call possible in a first place. Monster will have their script fully loaded and have a &quot;executeAction&quot; function that will be called from the cpp</para>
</listitem><listitem><para>Players will have to launch chai script to execute actions (no c++ hard coded action)</para>
</listitem><listitem><para>Each chai scripts need to be tested unitarly by a cpp test case which has to be developped in a way that it will be reusable.</para>
</listitem><listitem><para>When scripting are done and tested, create a repository to store those scripts (and all the upcoming ones). And link them to the repository FyS via a submodule.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Check if it is faster to return a cpp function from chaiscript and execute it compared to executing the code in chaiscript.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Unit test the fighting mechanism with mocked scripting</para>
</listitem><listitem><para>Test external authentication/implement messaging of notifications to players</para>
</listitem><listitem><para>Implement thread pool into each worker to enable multiple fightingPit per service </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
