<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_common_types_test_case_8cpp" kind="file" language="C++">
    <compoundname>CommonTypesTestCase.cpp</compoundname>
    <includes local="no">catch2/catch.hpp</includes>
    <includes refid="_common_types_8hh" local="no">fightingPit/data/CommonTypes.hh</includes>
    <incdepgraph>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="1">
        <label>/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp</label>
        <link refid="_common_types_test_case_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="3">
        <label>fightingPit/data/CommonTypes.hh</label>
        <link refid="_common_types_8hh_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>catch2/catch.hpp</label>
      </node>
      <node id="5">
        <label>set</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_common_types_test_case_8cpp_1a2cc36ddec3aab6c0ad26be01b3843ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;CommonTypesTestCase getActionNameFromKey test&quot;, &quot;[service][arena]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;CommonTypesTestCase getActionNameFromKey test&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[service][arena]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp" line="27" column="1" bodyfile="/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="_common_types_test_case_8cpp_1af8da8bf0de285d5dc0902d487ee4ae1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;CommonTypesTestCase getAlternateNameFromKey test&quot;, &quot;[service][arena]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;CommonTypesTestCase getAlternateNameFromKey test&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[service][arena]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp" line="36" column="1" bodyfile="/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp" bodystart="36" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="_common_types_test_case_8cpp_1a7d44c4e509a3c62d94acf024da12f4dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;CommonTypesTestCase&quot;, &quot;[service][arena]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;CommonTypesTestCase&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[service][arena]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp" line="45" column="1" bodyfile="/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp" bodystart="45" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>MIT<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Quentin<sp/>Balland</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Repository<sp/>:<sp/>https://github.com/FreeYourSoul/FyS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;catch2/catch.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fightingPit/data/CommonTypes.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;CommonTypesTestCase<sp/>getActionNameFromKey<sp/>test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[service][arena]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getActionNameFromKey(</highlight><highlight class="stringliteral">&quot;tete:tete:www:oo:popo.chai&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getActionNameFromKey(</highlight><highlight class="stringliteral">&quot;tete:tete:www:oo:popo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getActionNameFromKey(</highlight><highlight class="stringliteral">&quot;popo.chai&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getActionNameFromKey(</highlight><highlight class="stringliteral">&quot;popo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>TestCase<sp/>:<sp/>getActionNameFromKey<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;CommonTypesTestCase<sp/>getAlternateNameFromKey<sp/>test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[service][arena]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;alteration_popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getAlterationNameFromKey(</highlight><highlight class="stringliteral">&quot;tete:tete:www:oo:popo.chai&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;alteration_popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getAlterationNameFromKey(</highlight><highlight class="stringliteral">&quot;tete:tete:www:oo:popo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;alteration_popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getAlterationNameFromKey(</highlight><highlight class="stringliteral">&quot;popo.chai&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(</highlight><highlight class="stringliteral">&quot;alteration_popo&quot;</highlight><highlight class="normal"><sp/>==<sp/>fys::arena::data::getAlterationNameFromKey(</highlight><highlight class="stringliteral">&quot;popo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>TestCase<sp/>:<sp/>getAlternateNameFromKey<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;CommonTypesTestCase&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[service][arena]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;fys::arena::data::Alteration&gt;<sp/>alterations;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>fys::arena::data::mergeAlterations(alterations,<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;burned&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>5,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;burned&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;burned&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>3,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;frozen&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;frozen&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>9,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;frozen&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>8,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;paralyzed&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;paralyzed&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>42,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfys_1_1arena_1_1data_1_1_alteration" kindref="compound">fys::arena::data::Alteration</ref>(</highlight><highlight class="stringliteral">&quot;paralyzed&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1,<sp/>[](<ref refid="structfys_1_1arena_1_1data_1_1_status" kindref="compound">fys::arena::data::Status</ref>&amp;,<sp/>uint,<sp/>uint)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>})</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(3<sp/>==<sp/>alterations.size());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(5<sp/>==<sp/>alterations.at(0).getTurn());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(9<sp/>==<sp/>alterations.at(1).getTurn());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(42<sp/>==<sp/>alterations.at(2).getTurn());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>TestCase<sp/>:<sp/>WorkerService<sp/>test</highlight></codeline>
    </programlisting>
    <location file="/home/FyS/Project/FyS/services/arena/test/fightingPit/CommonTypesTestCase.cpp"/>
  </compounddef>
</doxygen>
